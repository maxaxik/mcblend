{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview A Blender addon for creating and animating Minecraft Bedrock Edition models. Features Importing and exporting Minecraft Bedrock Edition polymesh and cube based models Generating UV-maps and textures for Minecraft models Exporting animations Exporting poses The animated models can use armatures and constraints to make animating easier. Mcblend can detect parts moved by the constraints and add that to Minecraft animations even though Minecraft don't have features like that. Adding physics simulations to the model with a single press of a button Planned features The improvements planned for this Blender plugin are often listed as \"issues\" on the Github project page. Installation Download and install Blender . Download the latest version (zip file) from the project page on Github: https://github.com/Nusiq/mcblend/releases In Blender go to: Edit -> Preferences -> Add-ons -> Install... Select the zip file in the file explorer. Search for \"Mcblend\" in Add-ons and select the check box to enable the add-on Updating Currently there is no system for updating Mcblend. If you want to update than you must uninstall the old version of the addon and than install the new one. Which version should I install Pre-release vs Latest release The top first two releases at the top of the list are usually Pre-release and Latest release . The Pre-release versions are used to quickly deploy a new version of Mcblend before updating the user manual. This means that Pre-release versions usually have more features and some additional bug-fixes but they are not documented. When this user manual is updated the Pre-release is changed to Latest release . Sometimes shortly after chainging the pre-release status to normal release there is no pre-release on the list. Versioning system The Mcblend version numbers are created with 3 dot-separated numbers: A.B.C A - Compatibility breaking change (some change in the code which may make some of the data from the project to be lost in case of upgrading from older version of Mcblend) B - New features C - Bug fixes Changing A resets B and C. Changing B resets C.","title":"Overview"},{"location":"#overview","text":"A Blender addon for creating and animating Minecraft Bedrock Edition models.","title":"Overview"},{"location":"#features","text":"Importing and exporting Minecraft Bedrock Edition polymesh and cube based models Generating UV-maps and textures for Minecraft models Exporting animations Exporting poses The animated models can use armatures and constraints to make animating easier. Mcblend can detect parts moved by the constraints and add that to Minecraft animations even though Minecraft don't have features like that. Adding physics simulations to the model with a single press of a button","title":"Features"},{"location":"#planned-features","text":"The improvements planned for this Blender plugin are often listed as \"issues\" on the Github project page.","title":"Planned features"},{"location":"#installation","text":"Download and install Blender . Download the latest version (zip file) from the project page on Github: https://github.com/Nusiq/mcblend/releases In Blender go to: Edit -> Preferences -> Add-ons -> Install... Select the zip file in the file explorer. Search for \"Mcblend\" in Add-ons and select the check box to enable the add-on","title":"Installation"},{"location":"#updating","text":"Currently there is no system for updating Mcblend. If you want to update than you must uninstall the old version of the addon and than install the new one.","title":"Updating"},{"location":"#which-version-should-i-install","text":"","title":"Which version should I install"},{"location":"#pre-release-vs-latest-release","text":"The top first two releases at the top of the list are usually Pre-release and Latest release . The Pre-release versions are used to quickly deploy a new version of Mcblend before updating the user manual. This means that Pre-release versions usually have more features and some additional bug-fixes but they are not documented. When this user manual is updated the Pre-release is changed to Latest release . Sometimes shortly after chainging the pre-release status to normal release there is no pre-release on the list.","title":"Pre-release vs Latest release"},{"location":"#versioning-system","text":"The Mcblend version numbers are created with 3 dot-separated numbers: A.B.C A - Compatibility breaking change (some change in the code which may make some of the data from the project to be lost in case of upgrading from older version of Mcblend) B - New features C - Bug fixes Changing A resets B and C. Changing B resets C.","title":"Versioning system"},{"location":"animating_effects/","text":"Animating effects The sound effects and particle effects are animated with use of events. You can define events in Mcblend events menu in scene properties . One event can contain multiple particles and sound effects. The effects are not visible in preview of the animation in Blender. They only add some information to exported animation. Effects can be attached to the animation by adding markers in the timeline with the name of the event. You can trigger the same event multiple times in the animation by adding multiple timeline markers with the same name. Timeline markers that do not have a matching event name are ignored when exporting the animation and serve the same purpose as any other timeline marker in Blender. A timeline with timeline markers for events:","title":"Animating effects"},{"location":"animating_effects/#animating-effects","text":"The sound effects and particle effects are animated with use of events. You can define events in Mcblend events menu in scene properties . One event can contain multiple particles and sound effects. The effects are not visible in preview of the animation in Blender. They only add some information to exported animation. Effects can be attached to the animation by adding markers in the timeline with the name of the event. You can trigger the same event multiple times in the animation by adding multiple timeline markers with the same name. Timeline markers that do not have a matching event name are ignored when exporting the animation and serve the same purpose as any other timeline marker in Blender. A timeline with timeline markers for events:","title":"Animating effects"},{"location":"conversion_rules/","text":"Conversion rules There are no directly equivalent objects in Blender models to Minecraft models. Mcblend uses a set of rules to decide which parts of the model should be turned into bone, locator or cube. Every model must have an armature (a lot of properties of the model are saved in the armature object). The bones of the armature are converted into the bones in Minecraft model unless they don't have any children or parents. This rule helps avoid exporting bones used for inverse kinematics. The child objects (meshes) of the bones are converted into cubes or polymesh (you can use the mesh type property to decide wherher the object is exported as polymesh or a cube). Mcblend uses \"Bone\" parenting mode. You can set a bone to be a parent of an object while you're in \"Pose mode\" by selecting the child object in outliner, then than selecting the bone and pressing CTRL+P . In the context menu select \"Bone\" option. The empties are translated into locators. They cannot have child objects. you can parent the empty to a bone in exactly same way as described in point 3. You don't have to parent the cubes directly to bones. If you parent them to each other as long as one of them are parented to a bone. Note The best way to learn what kinds of object are converted to what is trial and error. You can use the set of rules below if you notice something unexpected.","title":"Conversion rules"},{"location":"conversion_rules/#conversion-rules","text":"There are no directly equivalent objects in Blender models to Minecraft models. Mcblend uses a set of rules to decide which parts of the model should be turned into bone, locator or cube. Every model must have an armature (a lot of properties of the model are saved in the armature object). The bones of the armature are converted into the bones in Minecraft model unless they don't have any children or parents. This rule helps avoid exporting bones used for inverse kinematics. The child objects (meshes) of the bones are converted into cubes or polymesh (you can use the mesh type property to decide wherher the object is exported as polymesh or a cube). Mcblend uses \"Bone\" parenting mode. You can set a bone to be a parent of an object while you're in \"Pose mode\" by selecting the child object in outliner, then than selecting the bone and pressing CTRL+P . In the context menu select \"Bone\" option. The empties are translated into locators. They cannot have child objects. you can parent the empty to a bone in exactly same way as described in point 3. You don't have to parent the cubes directly to bones. If you parent them to each other as long as one of them are parented to a bone. Note The best way to learn what kinds of object are converted to what is trial and error. You can use the set of rules below if you notice something unexpected.","title":"Conversion rules"},{"location":"gui/","text":"GUI Mcblend adds new elements to Blender GUI: Mcblend tab on sidebar , Mcblend: UV-groups and Mcblend: Animation Events tab in the Scene Properties , Mcblend: Object Properties in the Object Properties when you have a mesh selected, Mcblend: Model Properties , Mcblend: Render Controllers and Mcblend: Animations in the Object Properties when the active object is an armature. Export bedrock Model and Export Bedrock Animation in the export menu, Import Bedrock Model in the import menu. Sidebar The sidebar (the menu that you can open by pressing N button by default) gives access to some of the operators and has a panel which lets you quckly import models of the entities from resource packs. Resurce Pack panel The resource pack panel lets you connect a resource pack to a project. When you have a resource pack connected to your project you can easily an entity from a list and import all of its models (if it has multiple) and select the texture variant and materials that you can use. The example on the sidebar image (above) is more complicated than most of the models that you would normally import, in most cases Mcblend will be able to automatically detect which model, material and texture should be used but in some cases it's impossible to tell without analysing behavior of the entity when molang queries are used. In these situations additional user input is required. Operators UV-mapping panel Fix model UV-mapping - operator used to fix invalid UV-mapping of the cubes of the model. All faces of the cubes in the Minecraft model must be rectangular and have certain rotation. This operator ensures that this conditions are true. It's particularly useful when you get an error message which says that certain object has invalid UV-mapping and is impossible to export. The operator fixes all of the cubes of the model and can be used only when the active object is an armature. Set the UV group - adds selected objects to one of the existing UV-groups . This operator can be used when at least one mesh is selected and at least one UV group has been created in your project. Clear UV group - oposite to \"Set the UV group\". It removes the UV group from the selected objects. Mesh Transformations panel Inflate - Inflates the selected object using Minecraft inflate property. Running this operator opens a panel in the bottom left corner of the 3D viewport. You can use this panel to adjust the \"inflate\" value. Round dimensions -Rounds the dimensions of the object in such way that they become integers in exported Minecraft model. Separate and align cubes - Separate cubes can detect cubes grouped in a single mesh and separate them into multiple objects. Unlike the vanilla Blender operator ( Mesh -> Separate ), the Separate cubes operator from Mcblend is designed for working with cuboids and can detect their rotations. This is important because meshes in Mcblend must be aligned with the rotations of the objects that store them in order to make Mcblend work properly. Additionally if you happen to have a mesh with single cube rotated in edit mode (mesh not aligned to object rotation), you can use this operator to fix the problem. The operator won't create new objects if there is only one cube in the mesh but it will fix the rotation problem. Images below show the difference between applying Separate cubes and Mesh -> Separate operators: Before separating cubes Objects separated with Mcblend Objects separated using default Blender operator Prepare physics simulation - this button automatically creates objects which can be used for physics simulation. The simulation starts one frame after the selected frame. It adds ragdoll effect to the model. Newly created objects are added into 3 separate new collections: Rigid Body (a group with rigid body objects with the same shape as the original model), Rigid Body Constraints (a group of empties with rigid body constraints that connect parts of the simulated objects together) and Bone Parents (a group of objects which follow the rigid body and make the original model follow the simulation). Scene properties Scene properties tab has two new panels: Mcblend: UV-groups - used for creating and customizing UV-groups. Mcblend: Animation Events - used for adding events for creating sound- and particle-effects animations . Object properties (mesh) This is the panel that you cane see when you open object properties of a mesh. Mesh type (dropdown list) - Cube or Poly mesh . Decides if the object should be exported as a cube or polymesh. Objects with non-cuboid shapes must be polymesh type or you won't be able to export them. Note Polymesh models are still experimental Minecraft feature and they could even be removed from Minecraft. Experimental features are not allowed on marketplace so keep that in mind if you're making a map for marketplace. UV Group (textfield) - displays the UV-group name of the selected object. Mirror - the mirror property is used only during the UV-mapping. It affects the mapping of the faces of the object in a same way as Minecraft mirror property of a cube. Inflate - stores the Minecraft inflate property value of the cube. Note Editing the Inflate value through this panel does not change the dimensions of the object, but it does change the inflate value in the exported object. If you want to inflate/deflate the object you should use the inflate operator from the sidebar. Min UV bound - this property is used during UV-mapping. It defines the minimal space on the texture used for a cube. If cube has width, height or depth lower than one unit of length, this property can be used to make sure that every face will gett some space on the texture. Normally in this case a the size of the cube would be rounded down to 0 during UV-mapping and some of the faces of the cube wouldn't get any space on the texture. Object properties (armature) This is the panel that you can see when you open object properties of an armature. Mcblend: Model properties - this panel has some of the basic properties of the minecraft model (like visible bounds widht and height) and someproperties used for texture generation. Allow texture expanding - allows changing the texture width and height during UV-mapping. Generate Texture - generates template texture during UV-mapping (UV-mapping without this option sellected will change the UV of the model but won't generate any texture file). Template resolution defines the size of the texture. The real resolution of the generated texture image is equal to texture width and hight multiplied by texture resolution. Set minecraft UV button - generates the UV map and texture of the model based on the setting from the properties above. To perform the UV-mapping fill in the form and press the \"Set Minecraft UVs\" button. Note After the UV mapping, you can still go to the UV editor and move everything to your liking. This operator tries to arrange the UVs of the selected objects on the texture space using the basic non-per-face Minecraft UV-mapping. If you move the UV in such a way that it cannot be mapped in standard Minecraft UV-mapping way than mcblend will detect that and uses per-face UV mapping. Don't move individual vertices of the faces on the UV unless you know what you're doing. The faces on the UV must remain rectangles, or the UV of the exported model may have unexpected shapes. Mcblend: Render Controllers Tihs panel lets you quickly create materials for the model which will look very similar to models in Minecraft. You can add multiple render controllers to the model and in every render controller you can select single texture and multiple materials assigned to the model by name patterns. When you finish setting up the render controller you can use the \"Apply materials\" button to automatically create the materials for preview in blender. If you add multiple textures and render controllers to your model they'll be stacked on top of each other in a same way as in Minecraft. Mcblend: Animations The animations panel lets you quickly switch between animations. The animations in Mcblend are connected to NLA tracks of the armature. Switching the animation in the Animations menu will switch the active NLA tracks. New animation - creates new animation. You can't use this operator while editing an action of the armature. If you want to create a new action you need to stash the action first. Remove animation - Removes currently active animation. Select animation (dropdown list) - Lets you select one of the previously created animations. Name - Sets the name of the animation. Skip rest poses - During exporting the animation with this checkbox selected will skip adding unnecessary frames which don't affect the movements of the models. In most cases it's recommended to use this option. Export as pose - Instead of exporting animation the exporter will export a single frame (a pose of the model). Loop - this property is the same as the loop property from Minecraft animation files. There are three options \"true\", \"false\" and \"hold_on_last_frame\" Anim Time Update - this property is exactly the same as the anim_time_update property from Minecraft animation files. You should either leave it empty (if you don't want to have \"anim_time_update\" in your animation) or put molang expression in it. It doesn't affect the animation in Mcblend. It only changes a single property of the exported file. Frame start - the first frame of the animation. Frame end - the last frame of the animation.","title":"GUI"},{"location":"gui/#gui","text":"Mcblend adds new elements to Blender GUI: Mcblend tab on sidebar , Mcblend: UV-groups and Mcblend: Animation Events tab in the Scene Properties , Mcblend: Object Properties in the Object Properties when you have a mesh selected, Mcblend: Model Properties , Mcblend: Render Controllers and Mcblend: Animations in the Object Properties when the active object is an armature. Export bedrock Model and Export Bedrock Animation in the export menu, Import Bedrock Model in the import menu.","title":"GUI"},{"location":"gui/#sidebar","text":"The sidebar (the menu that you can open by pressing N button by default) gives access to some of the operators and has a panel which lets you quckly import models of the entities from resource packs.","title":"Sidebar"},{"location":"gui/#resurce-pack-panel","text":"The resource pack panel lets you connect a resource pack to a project. When you have a resource pack connected to your project you can easily an entity from a list and import all of its models (if it has multiple) and select the texture variant and materials that you can use. The example on the sidebar image (above) is more complicated than most of the models that you would normally import, in most cases Mcblend will be able to automatically detect which model, material and texture should be used but in some cases it's impossible to tell without analysing behavior of the entity when molang queries are used. In these situations additional user input is required.","title":"Resurce Pack panel"},{"location":"gui/#operators","text":"","title":"Operators"},{"location":"gui/#uv-mapping-panel","text":"Fix model UV-mapping - operator used to fix invalid UV-mapping of the cubes of the model. All faces of the cubes in the Minecraft model must be rectangular and have certain rotation. This operator ensures that this conditions are true. It's particularly useful when you get an error message which says that certain object has invalid UV-mapping and is impossible to export. The operator fixes all of the cubes of the model and can be used only when the active object is an armature. Set the UV group - adds selected objects to one of the existing UV-groups . This operator can be used when at least one mesh is selected and at least one UV group has been created in your project. Clear UV group - oposite to \"Set the UV group\". It removes the UV group from the selected objects.","title":"UV-mapping panel"},{"location":"gui/#mesh-transformations-panel","text":"Inflate - Inflates the selected object using Minecraft inflate property. Running this operator opens a panel in the bottom left corner of the 3D viewport. You can use this panel to adjust the \"inflate\" value. Round dimensions -Rounds the dimensions of the object in such way that they become integers in exported Minecraft model. Separate and align cubes - Separate cubes can detect cubes grouped in a single mesh and separate them into multiple objects. Unlike the vanilla Blender operator ( Mesh -> Separate ), the Separate cubes operator from Mcblend is designed for working with cuboids and can detect their rotations. This is important because meshes in Mcblend must be aligned with the rotations of the objects that store them in order to make Mcblend work properly. Additionally if you happen to have a mesh with single cube rotated in edit mode (mesh not aligned to object rotation), you can use this operator to fix the problem. The operator won't create new objects if there is only one cube in the mesh but it will fix the rotation problem. Images below show the difference between applying Separate cubes and Mesh -> Separate operators: Before separating cubes Objects separated with Mcblend Objects separated using default Blender operator Prepare physics simulation - this button automatically creates objects which can be used for physics simulation. The simulation starts one frame after the selected frame. It adds ragdoll effect to the model. Newly created objects are added into 3 separate new collections: Rigid Body (a group with rigid body objects with the same shape as the original model), Rigid Body Constraints (a group of empties with rigid body constraints that connect parts of the simulated objects together) and Bone Parents (a group of objects which follow the rigid body and make the original model follow the simulation).","title":"Mesh Transformations panel"},{"location":"gui/#scene-properties","text":"Scene properties tab has two new panels: Mcblend: UV-groups - used for creating and customizing UV-groups. Mcblend: Animation Events - used for adding events for creating sound- and particle-effects animations .","title":"Scene properties"},{"location":"gui/#object-properties-mesh","text":"This is the panel that you cane see when you open object properties of a mesh. Mesh type (dropdown list) - Cube or Poly mesh . Decides if the object should be exported as a cube or polymesh. Objects with non-cuboid shapes must be polymesh type or you won't be able to export them. Note Polymesh models are still experimental Minecraft feature and they could even be removed from Minecraft. Experimental features are not allowed on marketplace so keep that in mind if you're making a map for marketplace. UV Group (textfield) - displays the UV-group name of the selected object. Mirror - the mirror property is used only during the UV-mapping. It affects the mapping of the faces of the object in a same way as Minecraft mirror property of a cube. Inflate - stores the Minecraft inflate property value of the cube. Note Editing the Inflate value through this panel does not change the dimensions of the object, but it does change the inflate value in the exported object. If you want to inflate/deflate the object you should use the inflate operator from the sidebar. Min UV bound - this property is used during UV-mapping. It defines the minimal space on the texture used for a cube. If cube has width, height or depth lower than one unit of length, this property can be used to make sure that every face will gett some space on the texture. Normally in this case a the size of the cube would be rounded down to 0 during UV-mapping and some of the faces of the cube wouldn't get any space on the texture.","title":"Object properties (mesh)"},{"location":"gui/#object-properties-armature","text":"This is the panel that you can see when you open object properties of an armature. Mcblend: Model properties - this panel has some of the basic properties of the minecraft model (like visible bounds widht and height) and someproperties used for texture generation. Allow texture expanding - allows changing the texture width and height during UV-mapping. Generate Texture - generates template texture during UV-mapping (UV-mapping without this option sellected will change the UV of the model but won't generate any texture file). Template resolution defines the size of the texture. The real resolution of the generated texture image is equal to texture width and hight multiplied by texture resolution. Set minecraft UV button - generates the UV map and texture of the model based on the setting from the properties above. To perform the UV-mapping fill in the form and press the \"Set Minecraft UVs\" button. Note After the UV mapping, you can still go to the UV editor and move everything to your liking. This operator tries to arrange the UVs of the selected objects on the texture space using the basic non-per-face Minecraft UV-mapping. If you move the UV in such a way that it cannot be mapped in standard Minecraft UV-mapping way than mcblend will detect that and uses per-face UV mapping. Don't move individual vertices of the faces on the UV unless you know what you're doing. The faces on the UV must remain rectangles, or the UV of the exported model may have unexpected shapes. Mcblend: Render Controllers Tihs panel lets you quickly create materials for the model which will look very similar to models in Minecraft. You can add multiple render controllers to the model and in every render controller you can select single texture and multiple materials assigned to the model by name patterns. When you finish setting up the render controller you can use the \"Apply materials\" button to automatically create the materials for preview in blender. If you add multiple textures and render controllers to your model they'll be stacked on top of each other in a same way as in Minecraft. Mcblend: Animations The animations panel lets you quickly switch between animations. The animations in Mcblend are connected to NLA tracks of the armature. Switching the animation in the Animations menu will switch the active NLA tracks. New animation - creates new animation. You can't use this operator while editing an action of the armature. If you want to create a new action you need to stash the action first. Remove animation - Removes currently active animation. Select animation (dropdown list) - Lets you select one of the previously created animations. Name - Sets the name of the animation. Skip rest poses - During exporting the animation with this checkbox selected will skip adding unnecessary frames which don't affect the movements of the models. In most cases it's recommended to use this option. Export as pose - Instead of exporting animation the exporter will export a single frame (a pose of the model). Loop - this property is the same as the loop property from Minecraft animation files. There are three options \"true\", \"false\" and \"hold_on_last_frame\" Anim Time Update - this property is exactly the same as the anim_time_update property from Minecraft animation files. You should either leave it empty (if you don't want to have \"anim_time_update\" in your animation) or put molang expression in it. It doesn't affect the animation in Mcblend. It only changes a single property of the exported file. Frame start - the first frame of the animation. Frame end - the last frame of the animation.","title":"Object properties (armature)"},{"location":"importing_and_exporting/","text":"Importing and exporting files Importing models Open to File -> Import -> Import Bedrock Model Set the import properties on the right side of the file explorer. \"Geometry name\" lets you specify the name of the model that you want to import from the file. You can leave it blank to import the first model from the list. Don't add geometry. prefix to the model name (it's added automatically). Find the model file in the file explorer and press import model to finalize the importing. Exporting models The \"Export models\" panel is used to export models. You can set the name and visible model bounds here. Exported model will automatically add the geometry. prefix to the name so you don't have to do that. Select the armature which represents your model. In object properties of the armature you'll be able to change some settings related to exporting. When you finish changing the model settings go to File -> Export -> Export Bedrock Model Choose the output path in the file explorer window. Exporting animations Note Mcblend exports animations using key frames. Molang is not supported. Blender let's you implement various dependencies between animated objects with constraints and rigging. This means that animating one object can affect movement of another object even if the second object doesn't have any key frames. That is why the key frames in Blender animations aren't directly translated to key frames in Minecraft animations. Mcblend collects the time stamps of every keyframe of every bone of the armature and goes through that list looking for movements. Every movement of every bone between two frames is saved to exported file. The keyframes from Non-linear animations (NLA) are also supported can also be used by Mcblend to detect the movements. Go to object mode and select the armature with your model In object properties find Mcblend: Animation panel. Press \"New animation\" button or select the animation you want to export with Select animation dropdown list. Create your animation and stash the actions of the armature as the NLA tracks. You can combine multiple tracks in one animation. Mcblend remembers which NLA tracks are connected to which NLA tracks and changes the active tracks when you switch the animation. In the Mcblend: Animation you can fill in the form with the information about the animation to configure it to your preference. Name - the name of the animation. Skip rest poses - whether the bones in rest poses should be exported as a part of animation. A rest pose is a pose with default location, rotation and scale. This setting typically significantly reduces the size of the exported animation. Export as pose - exports current frame as a looped animation with a pose instead of exporting full animation. Loop - whether the animation should be looped. Anim Time Update - the content of this text field is copied to \"anim_time_update\" property of the Minecraft animation. If you leave it blank than the animation won't use that property. Open File -> Export -> Export Bedrock Animation . Note Mcblend uses frame 0 to detect the rest pose of the model. Every movement in the animation is relative to the rest pose. If you're exporting the model and the animation remember to make sure that the animation doesn't change the pose of the model on frame 0 or you may get some unexpected results.","title":"Importing and exporting files"},{"location":"importing_and_exporting/#importing-and-exporting-files","text":"","title":"Importing and exporting files"},{"location":"importing_and_exporting/#importing-models","text":"Open to File -> Import -> Import Bedrock Model Set the import properties on the right side of the file explorer. \"Geometry name\" lets you specify the name of the model that you want to import from the file. You can leave it blank to import the first model from the list. Don't add geometry. prefix to the model name (it's added automatically). Find the model file in the file explorer and press import model to finalize the importing.","title":"Importing models"},{"location":"importing_and_exporting/#exporting-models","text":"The \"Export models\" panel is used to export models. You can set the name and visible model bounds here. Exported model will automatically add the geometry. prefix to the name so you don't have to do that. Select the armature which represents your model. In object properties of the armature you'll be able to change some settings related to exporting. When you finish changing the model settings go to File -> Export -> Export Bedrock Model Choose the output path in the file explorer window.","title":"Exporting models"},{"location":"importing_and_exporting/#exporting-animations","text":"Note Mcblend exports animations using key frames. Molang is not supported. Blender let's you implement various dependencies between animated objects with constraints and rigging. This means that animating one object can affect movement of another object even if the second object doesn't have any key frames. That is why the key frames in Blender animations aren't directly translated to key frames in Minecraft animations. Mcblend collects the time stamps of every keyframe of every bone of the armature and goes through that list looking for movements. Every movement of every bone between two frames is saved to exported file. The keyframes from Non-linear animations (NLA) are also supported can also be used by Mcblend to detect the movements. Go to object mode and select the armature with your model In object properties find Mcblend: Animation panel. Press \"New animation\" button or select the animation you want to export with Select animation dropdown list. Create your animation and stash the actions of the armature as the NLA tracks. You can combine multiple tracks in one animation. Mcblend remembers which NLA tracks are connected to which NLA tracks and changes the active tracks when you switch the animation. In the Mcblend: Animation you can fill in the form with the information about the animation to configure it to your preference. Name - the name of the animation. Skip rest poses - whether the bones in rest poses should be exported as a part of animation. A rest pose is a pose with default location, rotation and scale. This setting typically significantly reduces the size of the exported animation. Export as pose - exports current frame as a looped animation with a pose instead of exporting full animation. Loop - whether the animation should be looped. Anim Time Update - the content of this text field is copied to \"anim_time_update\" property of the Minecraft animation. If you leave it blank than the animation won't use that property. Open File -> Export -> Export Bedrock Animation . Note Mcblend uses frame 0 to detect the rest pose of the model. Every movement in the animation is relative to the rest pose. If you're exporting the model and the animation remember to make sure that the animation doesn't change the pose of the model on frame 0 or you may get some unexpected results.","title":"Exporting animations"},{"location":"limitations/","text":"Limitations Every cube must be a separate Blender object If you are creating a traditional Minecraft model with all parts made out of cubes you mast make sure that every cube is an separate object (separate mesh). You can use the edit mode to rotate, scale and move your cubes to your preference however, they mast be separated before you export the model (see separate cubes operator )\\ If you don't want to be restricted to using only cuboids for your model you can also mark your objects as polymesh . Be aware that the polymesh models are still an experimental feature in Minecraft and they could be removed in the future. No wide angles in animations There must be no more than 180\u00b0 rotation between two key frames or the exported animation will look different in Minecraft than in the preview in Blender. This issue is caused by the way Mcblend computes Minecraft's rotations internally. Blender supports multiple rotation modes and uses different rotation types for different kinds of objects. For example, bone rotations in armatures use quaternions, but meshes use Euler angles. Additionally, users can choose different rotation modes for each object. Minecraft uses Euler angles, but the axes are set differently. Mcblend can export models and animations regardless of the rotation modes used, but internally everything is converted to quaternions / translation matrices. The design decision for the internal use of quaternions was motivated by the fact that quaternions help avoid some calculation errors. Unfortunately, the quaternion number system has only one unique representation for each rotation orientation, so one cannot distinguish full rotation from no rotation (360\u00b0 == 0\u00b0). Therefore, you cannot use angles greater than 180\u00b0 between two key frames because Mcblend will always try to export as short rotation as possible. Note A quick fix to this problem is adding additional key frames for wide angle rotations. Every model must have an armature Blender has a lot of featurees. Way more than the Minecraft models support. Therfore there is no way of translating everything to Minecraft format. Mcblend has a set of conversion rules which defines what objects are converted to what. The TLDR version is: bones of armature are translated to bones, meshes are translated to cubes or polymesh and empties are translated to locators. You can edit multiple objects at once with Mcblend. Every armature can be exported as a Minecraft model. The parent rules decide which mesh belongs to what mode.","title":"Limitations"},{"location":"limitations/#limitations","text":"","title":"Limitations"},{"location":"limitations/#every-cube-must-be-a-separate-blender-object","text":"If you are creating a traditional Minecraft model with all parts made out of cubes you mast make sure that every cube is an separate object (separate mesh). You can use the edit mode to rotate, scale and move your cubes to your preference however, they mast be separated before you export the model (see separate cubes operator )\\ If you don't want to be restricted to using only cuboids for your model you can also mark your objects as polymesh . Be aware that the polymesh models are still an experimental feature in Minecraft and they could be removed in the future.","title":"Every cube must be a separate Blender object"},{"location":"limitations/#no-wide-angles-in-animations","text":"There must be no more than 180\u00b0 rotation between two key frames or the exported animation will look different in Minecraft than in the preview in Blender. This issue is caused by the way Mcblend computes Minecraft's rotations internally. Blender supports multiple rotation modes and uses different rotation types for different kinds of objects. For example, bone rotations in armatures use quaternions, but meshes use Euler angles. Additionally, users can choose different rotation modes for each object. Minecraft uses Euler angles, but the axes are set differently. Mcblend can export models and animations regardless of the rotation modes used, but internally everything is converted to quaternions / translation matrices. The design decision for the internal use of quaternions was motivated by the fact that quaternions help avoid some calculation errors. Unfortunately, the quaternion number system has only one unique representation for each rotation orientation, so one cannot distinguish full rotation from no rotation (360\u00b0 == 0\u00b0). Therefore, you cannot use angles greater than 180\u00b0 between two key frames because Mcblend will always try to export as short rotation as possible. Note A quick fix to this problem is adding additional key frames for wide angle rotations.","title":"No wide angles in animations"},{"location":"limitations/#every-model-must-have-an-armature","text":"Blender has a lot of featurees. Way more than the Minecraft models support. Therfore there is no way of translating everything to Minecraft format. Mcblend has a set of conversion rules which defines what objects are converted to what. The TLDR version is: bones of armature are translated to bones, meshes are translated to cubes or polymesh and empties are translated to locators. You can edit multiple objects at once with Mcblend. Every armature can be exported as a Minecraft model. The parent rules decide which mesh belongs to what mode.","title":"Every model must have an armature"},{"location":"texture_customization/","text":"Texture generator customization You can customize the appearance of a UV-group by applying masks to its faces in new custom panel in Scene Properties . Masks are filters that are applied to the texture when it is generated. Each UV-group has 6 faces. You can switch between faces to edit with \"Side:\" dropdown menu. The image below shows how the names of the sides (side1-6) are correlated to their placement on the texture. New masks are added with \"Add mask\" dropdown menu. There are 8 different types of masks. Note All masks have an eye icon in the upper right corner that can be used to temporarily disable / enable the mask. Color Palette Mask This mask takes the grayscale image as an input and maps its brightness values to a color image with a palette defined as a list of colors. Properties: Colors - list of colors in the palette Interpolate - whether there should be a smooth transition between the colors on the palette. Normalize - normalizes the input values so that the whole color palette is used. Note When input image is not grayscale than it gets converted to grayscale before applying the mask. Note Color palette mask is the only mask which can't be used inside the Mix Mask. If you put this mask into mix mask it will have no effect. Gradient Mask The Gradient mask creates a grayscale gradient with stripes of varying darkness and width. The direction in which the stripes are drawn is defined with two points on the texture. The grayscale image is than multiplied by the input image. Properties: Point A - the starting point of drawing gradient stripes. Point B - the end point of drawing gradient stripes. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Stripes - the list of stripes in the gradient their colors (strengths) and their widths. The widths define their placement on a line between points A and B so in most cases the width of the first stripe is 0, which means that this stripe should be drawn at the Point A. Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Ellipse Mask Ellipse mask creates a grayscale image of ellipse that fits between Point A and Point B. The grayscale image is than multiplied by the input image. Properties: Point A and B - boundaries of the ellipse. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of brightness of created filter image. Hard edge - whether the ellipse should have hard edges or the brightness of the inner part of the ellipse should be smoothly interpolated to the edges of the image. Rectangle Mask Rectangle mask creates a grayscale image of rectangle between Point A and Point B. The grayscale image is than multiplied by the input image. Properties: Point A and B - opposite corners of the rectangle. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of brightness of created filter image. Hard edge - whether the rectangle should have hard edges or the brightness of the inner part of the rectangle should be smoothly interpolated to the edges of the image. Stripes Mask Rectangle mask creates a grayscale image with repeating stripes of certain width and brightness. The grayscale image is than multiplied by the input image. Properties: Relative boundaries - whether the width of the stripes is expressed as a fraction of the image width / height. Stripes - the list of the stripes, their width and their brightness. Horizontal - whether the stripes should be vertical or horizontal. Random Mask Random mask creates a grayscale image with randomly bright pixels. The grayscale image is than multiplied by the input image. Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max brightness values of the pixels on the filter image. Use seed - allows you to set the seed for the color randomization. Color Mask Color mask multiplies the input mask by a color. Mix Mask Mix mask lets you mix multiple masks in different way than just default multiplication. Properties: Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of the brightness of returned filter image. The filter image brightness values are mapped to fit on the scale between values defined with \"strength\" Mix mode - how to mix filter images produced by other masks. There are 4 options: min, max, mean and median. Number of children - Number of mixed masks. Note Mix mask ignores the color palette masks because color palette mask does not create a filter image (it just alters the image from the input).","title":"Texture customization (advanced)"},{"location":"texture_customization/#texture-generator-customization","text":"You can customize the appearance of a UV-group by applying masks to its faces in new custom panel in Scene Properties . Masks are filters that are applied to the texture when it is generated. Each UV-group has 6 faces. You can switch between faces to edit with \"Side:\" dropdown menu. The image below shows how the names of the sides (side1-6) are correlated to their placement on the texture. New masks are added with \"Add mask\" dropdown menu. There are 8 different types of masks. Note All masks have an eye icon in the upper right corner that can be used to temporarily disable / enable the mask.","title":"Texture generator customization"},{"location":"texture_customization/#color-palette-mask","text":"This mask takes the grayscale image as an input and maps its brightness values to a color image with a palette defined as a list of colors. Properties: Colors - list of colors in the palette Interpolate - whether there should be a smooth transition between the colors on the palette. Normalize - normalizes the input values so that the whole color palette is used. Note When input image is not grayscale than it gets converted to grayscale before applying the mask. Note Color palette mask is the only mask which can't be used inside the Mix Mask. If you put this mask into mix mask it will have no effect.","title":"Color Palette Mask"},{"location":"texture_customization/#gradient-mask","text":"The Gradient mask creates a grayscale gradient with stripes of varying darkness and width. The direction in which the stripes are drawn is defined with two points on the texture. The grayscale image is than multiplied by the input image. Properties: Point A - the starting point of drawing gradient stripes. Point B - the end point of drawing gradient stripes. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Stripes - the list of stripes in the gradient their colors (strengths) and their widths. The widths define their placement on a line between points A and B so in most cases the width of the first stripe is 0, which means that this stripe should be drawn at the Point A. Exponent - the filter image is raised to the power of this value before it is multiplied by the image.","title":"Gradient Mask"},{"location":"texture_customization/#ellipse-mask","text":"Ellipse mask creates a grayscale image of ellipse that fits between Point A and Point B. The grayscale image is than multiplied by the input image. Properties: Point A and B - boundaries of the ellipse. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of brightness of created filter image. Hard edge - whether the ellipse should have hard edges or the brightness of the inner part of the ellipse should be smoothly interpolated to the edges of the image.","title":"Ellipse Mask"},{"location":"texture_customization/#rectangle-mask","text":"Rectangle mask creates a grayscale image of rectangle between Point A and Point B. The grayscale image is than multiplied by the input image. Properties: Point A and B - opposite corners of the rectangle. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of brightness of created filter image. Hard edge - whether the rectangle should have hard edges or the brightness of the inner part of the rectangle should be smoothly interpolated to the edges of the image.","title":"Rectangle Mask"},{"location":"texture_customization/#stripes-mask","text":"Rectangle mask creates a grayscale image with repeating stripes of certain width and brightness. The grayscale image is than multiplied by the input image. Properties: Relative boundaries - whether the width of the stripes is expressed as a fraction of the image width / height. Stripes - the list of the stripes, their width and their brightness. Horizontal - whether the stripes should be vertical or horizontal.","title":"Stripes Mask"},{"location":"texture_customization/#random-mask","text":"Random mask creates a grayscale image with randomly bright pixels. The grayscale image is than multiplied by the input image. Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max brightness values of the pixels on the filter image. Use seed - allows you to set the seed for the color randomization.","title":"Random Mask"},{"location":"texture_customization/#color-mask","text":"Color mask multiplies the input mask by a color.","title":"Color Mask"},{"location":"texture_customization/#mix-mask","text":"Mix mask lets you mix multiple masks in different way than just default multiplication. Properties: Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of the brightness of returned filter image. The filter image brightness values are mapped to fit on the scale between values defined with \"strength\" Mix mode - how to mix filter images produced by other masks. There are 4 options: min, max, mean and median. Number of children - Number of mixed masks. Note Mix mask ignores the color palette masks because color palette mask does not create a filter image (it just alters the image from the input).","title":"Mix Mask"},{"location":"tips_and_tricks/","text":"Tips and tricks This is a list of tips and tricks related to Mcbled. Some of them are related to the addon and some of them explain some basics of using Blender which can be useful for working with Mcblend. Matching framerate By default blender uses 24FPS framerate. Minecraft uses seconds to define the timestamps of keyframes in animation. It's good to change the framerate setting into something that divides 1 second period into something nice - for example (25FPS or 20FPS). 1/24 is 0.0416666 but 1/25 is 0.04 which looks way better in the animation file. You can find the framerate setting in Output Properties -> Frame Rate . World unit scale By default 1 meter in Blender is equal to one block in Minecraft. One Minecraft meter is 16 units of length of the model. You might want to measure the size of the model using these units instead of meters. You can go to Scene properties -> Unit scale to scale the units used in blender. Changing the value of this property to 16 will cause that one length unit in Blender model will be equal to one length unit of your model.","title":"Tips and tricks"},{"location":"tips_and_tricks/#tips-and-tricks","text":"This is a list of tips and tricks related to Mcbled. Some of them are related to the addon and some of them explain some basics of using Blender which can be useful for working with Mcblend.","title":"Tips and tricks"},{"location":"tips_and_tricks/#matching-framerate","text":"By default blender uses 24FPS framerate. Minecraft uses seconds to define the timestamps of keyframes in animation. It's good to change the framerate setting into something that divides 1 second period into something nice - for example (25FPS or 20FPS). 1/24 is 0.0416666 but 1/25 is 0.04 which looks way better in the animation file. You can find the framerate setting in Output Properties -> Frame Rate .","title":"Matching framerate"},{"location":"tips_and_tricks/#world-unit-scale","text":"By default 1 meter in Blender is equal to one block in Minecraft. One Minecraft meter is 16 units of length of the model. You might want to measure the size of the model using these units instead of meters. You can go to Scene properties -> Unit scale to scale the units used in blender. Changing the value of this property to 16 will cause that one length unit in Blender model will be equal to one length unit of your model.","title":"World unit scale"},{"location":"uv_groups/","text":"UV-groups UV-groups influence the process of UV-mapping. The main purpose of UV-groups is to group cubes together so that they are mapped to the same spot on the texture. Using UV groups can help reduce the texture size when the model has many identical parts. UV-groups also let you can change the appearance of generated textures to your preference. This can be useful for setting some distinguishable look for UV-group members. You can create some fairly advanced textures with it, but it's usually better to create textures in a usual way. Creating and removing UV-groups UV-groups are added / removed using the \"Mcblend UV groups\" panel from the Scene Properties with \"New UV group\" and \"Delete this UV group\" buttons. You can also export and import UV groups by using the \"Export UV group\" and \"Import UV group\" buttons respectively. Adding objects to UV-groups Adding object do UV-groups is done with Set the UV group button on sidebar. You must create at least one UV-group in order to add objects to it.","title":"UV-groups"},{"location":"uv_groups/#uv-groups","text":"UV-groups influence the process of UV-mapping. The main purpose of UV-groups is to group cubes together so that they are mapped to the same spot on the texture. Using UV groups can help reduce the texture size when the model has many identical parts. UV-groups also let you can change the appearance of generated textures to your preference. This can be useful for setting some distinguishable look for UV-group members. You can create some fairly advanced textures with it, but it's usually better to create textures in a usual way.","title":"UV-groups"},{"location":"uv_groups/#creating-and-removing-uv-groups","text":"UV-groups are added / removed using the \"Mcblend UV groups\" panel from the Scene Properties with \"New UV group\" and \"Delete this UV group\" buttons. You can also export and import UV groups by using the \"Export UV group\" and \"Import UV group\" buttons respectively.","title":"Creating and removing UV-groups"},{"location":"uv_groups/#adding-objects-to-uv-groups","text":"Adding object do UV-groups is done with Set the UV group button on sidebar. You must create at least one UV-group in order to add objects to it.","title":"Adding objects to UV-groups"}]}