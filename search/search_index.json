{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview A Blender addon for creating and animating Minecraft Bedrock Edition models. Features Importing and exporting Minecraft Bedrock Edition polymesh and cube based models Generating UV-maps and textures for Minecraft models Exporting animations Exporting poses The animated models can use armatures and constraints to make animating easier. Mcblend can detect parts moved by the constraints and add that to Minecraft animations even though they Minecraft don't have this kind of features. Planned features The improvements planned for this Blender plugin are often listed as \"issues\" on the Github project page. Installation Download and install Blender . Download the latest version (zip file) from the project page on Github: https://github.com/Nusiq/mcblend/releases In Blender go to: Edit -> Preferences -> Add-ons -> Install... Select the zip file in the file explorer. Search for \"Mcblend\" in Add-ons and select the check box to enable the add-on Updating Currently there is no system for updating Mcblend. If you want to update than you must uninstall the old version of the addon and than install the new one. Which version should I install Pre-release vs Latest release The top first two releases at the top of the list of releases for Mcblend - Pre-release and Latest release . The Pre-release versions are used to quickly deploy a new version of Mcblend before updating this user manual. This means that Pre-release versions usually have more features and some additional bug-fixes but they are not documented. When this user manual is updated the Pre-release is changed to Latest release . Versioning system The Mcblend version numbers are created with 3 dot-separated numbers: A.B.C A - Compatibility breaking change (some change in the code which may make some of the data from the project to be lost in case of upgrading from older version of Mcblend) B - New features C - Bug fixes Changing A resets B and C. Changing B resets C.","title":"Overview"},{"location":"#overview","text":"A Blender addon for creating and animating Minecraft Bedrock Edition models.","title":"Overview"},{"location":"#features","text":"Importing and exporting Minecraft Bedrock Edition polymesh and cube based models Generating UV-maps and textures for Minecraft models Exporting animations Exporting poses The animated models can use armatures and constraints to make animating easier. Mcblend can detect parts moved by the constraints and add that to Minecraft animations even though they Minecraft don't have this kind of features.","title":"Features"},{"location":"#planned-features","text":"The improvements planned for this Blender plugin are often listed as \"issues\" on the Github project page.","title":"Planned features"},{"location":"#installation","text":"Download and install Blender . Download the latest version (zip file) from the project page on Github: https://github.com/Nusiq/mcblend/releases In Blender go to: Edit -> Preferences -> Add-ons -> Install... Select the zip file in the file explorer. Search for \"Mcblend\" in Add-ons and select the check box to enable the add-on","title":"Installation"},{"location":"#updating","text":"Currently there is no system for updating Mcblend. If you want to update than you must uninstall the old version of the addon and than install the new one.","title":"Updating"},{"location":"#which-version-should-i-install","text":"","title":"Which version should I install"},{"location":"#pre-release-vs-latest-release","text":"The top first two releases at the top of the list of releases for Mcblend - Pre-release and Latest release . The Pre-release versions are used to quickly deploy a new version of Mcblend before updating this user manual. This means that Pre-release versions usually have more features and some additional bug-fixes but they are not documented. When this user manual is updated the Pre-release is changed to Latest release .","title":"Pre-release vs Latest release"},{"location":"#versioning-system","text":"The Mcblend version numbers are created with 3 dot-separated numbers: A.B.C A - Compatibility breaking change (some change in the code which may make some of the data from the project to be lost in case of upgrading from older version of Mcblend) B - New features C - Bug fixes Changing A resets B and C. Changing B resets C.","title":"Versioning system"},{"location":"animating_effects/","text":"Animating effects The sound effects and particle effects are animated with use of events. You can define events in Mcblend events menu in scene properties . One event can contain multiple particles and sound effects. The effects are not visible in preview of the animation in Blender. They only add some information to exported animation. Effects can be attached to the animation by adding markers in the timeline with the name of the event. You can trigger the same event multiple times in the animation by adding multiple timeline markers with the same name. Timeline markers that do not have a matching event name are ignored when exporting the animation and serve the same purpose as any other timeline marker in Blender. A timeline with timeline markers for events:","title":"Animating effects"},{"location":"animating_effects/#animating-effects","text":"The sound effects and particle effects are animated with use of events. You can define events in Mcblend events menu in scene properties . One event can contain multiple particles and sound effects. The effects are not visible in preview of the animation in Blender. They only add some information to exported animation. Effects can be attached to the animation by adding markers in the timeline with the name of the event. You can trigger the same event multiple times in the animation by adding multiple timeline markers with the same name. Timeline markers that do not have a matching event name are ignored when exporting the animation and serve the same purpose as any other timeline marker in Blender. A timeline with timeline markers for events:","title":"Animating effects"},{"location":"basic_operators/","text":"Basic operators All of the basic operators are in the sidebar. Importing models This panel is used for importing bedrock models from JSON files. Usage Press the \"Import model\" button. Set the import properties on the right side of the file explorer. \"Geometry name\" lets you specify the name of the model that you want to import from the file. You can leave it blank to import the first model from the list. Don't add geometry. prefix to the model name (it's added automatically). \"Replace bones with empties\" checkbox decides whether the model should be imported using empties to represent Minecraft bones (checked) or an armature and bones (unchecked, default value). Find the model file in the file explorer and press import model to finalize the importing. The import model operator can also be accessed via File -> Import menu. Exporting models The \"Export models\" panel is used to export models. You can set the name and visible model bounds here. Exported model will automatically add the geometry. prefix to the name so you don't have to do that. Usage Select all of the objects that you want to export. Insert the name of the model. Press the \"Export model\" button. Choose the output path in the file explorer window. The export model operator can also be accessed via File -> Export menu. Exporting animations Exporting animations is done with \"Export bedrock animations\" panel. Note Mcblend exports animations using key frames. Molang is not supported. Blender let's you implement various dependencies between animated objects with constraints and rigging. This means that animating one object can affect movement of another object even if the second object doesn't have any key frames. That is why the key frames in Blender animations aren't directly translated to key frames in Minecraft animations. Mcblend collects the time stamps of every keyframe of every selected objects and goes through that list looking for movements. Every movement of every object between two frames is saved to exported file. Non-linear animations (NLA) are also supported even though Blender doesn't let you view the exact times of the key frames from animation strips on a timeline. Usage Create new animation with \"New animation\" button (some of the parts of panel won't be visible until you have an animations). You may have as many animation settings saved as you want and you can switch between them with \"Select animation\" dropdown menu. Select the objects to export in the 3d viewport. Fill in the form with the information about the animation. Name - the name of the animation. Skip rest poses - whether the bones in rest poses should be exported as a part of animation. A rest pose is a pose with default location, rotation and scale. This setting typically significantly reduces the size of the exported animation. Export as pose - exports current frame as a looped animation with a pose instead of exporting full animation. Loop - whether the animation should be looped. anim_time_update - the content of this text field is copied to \"anim_time_update\" property of the Minecraft animation. If you leave it blank the the animation won't use the anim_time_update. Press the \"Export animation\" button. Note The time of the animation is determined by the time of animation that you can set in the timeline. The animations should always start at frame 1. Frame 0 should have the model in the default pose. UV-mapping UV-mapping is performed via \"Set bedrock UVs\" panel. You can also use this panel for generating textures. Usage To perform the UV-mapping fill in the form and press the \"Set Minecraft UVs\" button. Texture width - the texture_width property of the Minecraft model. Texture height - the texture_height property of the Minecraft model. Allow texture expanding - whether the texture can be expanded if there is no space for UV-mapping. Generate Texture - whether the operator should generate a texture ( the name of the created texture is always \"template\") Template resolution - Sets the resolution of the template texture. This value describes how many pixels on the image is represented by one texture_widht or texture_height unit in the model definition. The value 1 gives the standard Minecraft texture resolution. Higher values can be used to create \"HD textures\". You can adjust the UV-mapping using UV-groups to get best. Note After the UV mapping, you can still go to the UV editor and move everything to your liking. This operator tries to arrange the UVs of the selected objects on the texture space using the basic non-per-face Minecraft UV-mapping. If you move the UV in such a way that it cannot be mapped in standard Minecraft UV-mapping way than mcblend will detect that and uses per-face UV mapping. Don't move individual vertices of the faces on the UV unless you know what you're doing. The faces on the UV must remain rectangles, or the UV of the exported model may have unexpected shapes. Other operators The \"Operators\" panel gives access to operators that modify various properties used by Mcblend. Toggle mirror for UV mapping Toggles the mirror property of selected objects. The mirror property affects the process of UV-mapping. Objects with this property are mapped as if they had the Minecraft mirror property. Using this operator doesn't remap the UV. If you want to change the UV of the object, you must also use the operator from the Set bedrock UVs panel to update the UVs. Fix invalid cube UV Fix invalid cube UV operator - as the name suggests - is used to fix invalid UV-mapping of the cubes. All faces of the cubes in the Minecraft model must be rectangular and have certain rotation. This operator ensures that this conditions are true. It's particularly useful when you get an error message which says that certain object has invalid UV-mapping and is impossible to export. Note This operator affects only the selected objects with Cube mesh type . Set the UV group Adds selected objects to one of the existing UV-groups . Clear the UV group Removes selected objects from UV-groups. Toggle export as bones Toggles the export bone property of selected objects. Objects with this property are always exported as bones. Mcblend usually tries to export most meshes as cubes and groups them together with some parent object that becomes a bone. If you want to mark a certain cube as an independent bone, you need to use this operator. Note The best way of using Mcblend is to have one rig for the model and parenting the meshes to bones of that rig. This allows you to take the advantage of features like inverse kinematics and also creates a model in which it's really easy to distinguish which Blender object becomes what in Minecraft model. Bones will be translated into Minecraft bones and meshes into cubes. If you add some empties without children they will become the locators. Inflate Inflates the selected object using Minecraft inflate property. Running this operator opens a panel in the bottom left corner of the 3D viewport. You can use this panel to adjust the \"inflate\" value. Round dimensions Rounds the dimensions of the object in such way that they become integers in exported Minecraft model. Separate cubes Separate cubes can detect cubes grouped in a single mesh and separate them into multiple objects. Unlike the Mesh: Separate operator (vanilla blender operator), the Separate cubes from Mcblend is designed for working with cuboids and can detect their rotations. This is important because the cubes (meshes) of the models from Mcblend must be aligned to rotations of the object that contain them. Note If you happen to have a mesh with single cube rotated in edit mode (mesh not aligned to object rotation), you can use this operator to fix the problem. The operator won't create new objects if there is only one cube in the mesh but it will fix the rotation problem. Images below show the difference between applying Separate cubes and Mesh: Separate operators: Before separating cubes: After separating cubes: Separated objects after using default blender Mesh->Separate operator:","title":"Basic Operators"},{"location":"basic_operators/#basic-operators","text":"All of the basic operators are in the sidebar.","title":"Basic operators"},{"location":"basic_operators/#importing-models","text":"This panel is used for importing bedrock models from JSON files. Usage Press the \"Import model\" button. Set the import properties on the right side of the file explorer. \"Geometry name\" lets you specify the name of the model that you want to import from the file. You can leave it blank to import the first model from the list. Don't add geometry. prefix to the model name (it's added automatically). \"Replace bones with empties\" checkbox decides whether the model should be imported using empties to represent Minecraft bones (checked) or an armature and bones (unchecked, default value). Find the model file in the file explorer and press import model to finalize the importing. The import model operator can also be accessed via File -> Import menu.","title":"Importing models"},{"location":"basic_operators/#exporting-models","text":"The \"Export models\" panel is used to export models. You can set the name and visible model bounds here. Exported model will automatically add the geometry. prefix to the name so you don't have to do that. Usage Select all of the objects that you want to export. Insert the name of the model. Press the \"Export model\" button. Choose the output path in the file explorer window. The export model operator can also be accessed via File -> Export menu.","title":"Exporting models"},{"location":"basic_operators/#exporting-animations","text":"Exporting animations is done with \"Export bedrock animations\" panel. Note Mcblend exports animations using key frames. Molang is not supported. Blender let's you implement various dependencies between animated objects with constraints and rigging. This means that animating one object can affect movement of another object even if the second object doesn't have any key frames. That is why the key frames in Blender animations aren't directly translated to key frames in Minecraft animations. Mcblend collects the time stamps of every keyframe of every selected objects and goes through that list looking for movements. Every movement of every object between two frames is saved to exported file. Non-linear animations (NLA) are also supported even though Blender doesn't let you view the exact times of the key frames from animation strips on a timeline. Usage Create new animation with \"New animation\" button (some of the parts of panel won't be visible until you have an animations). You may have as many animation settings saved as you want and you can switch between them with \"Select animation\" dropdown menu. Select the objects to export in the 3d viewport. Fill in the form with the information about the animation. Name - the name of the animation. Skip rest poses - whether the bones in rest poses should be exported as a part of animation. A rest pose is a pose with default location, rotation and scale. This setting typically significantly reduces the size of the exported animation. Export as pose - exports current frame as a looped animation with a pose instead of exporting full animation. Loop - whether the animation should be looped. anim_time_update - the content of this text field is copied to \"anim_time_update\" property of the Minecraft animation. If you leave it blank the the animation won't use the anim_time_update. Press the \"Export animation\" button. Note The time of the animation is determined by the time of animation that you can set in the timeline. The animations should always start at frame 1. Frame 0 should have the model in the default pose.","title":"Exporting animations"},{"location":"basic_operators/#uv-mapping","text":"UV-mapping is performed via \"Set bedrock UVs\" panel. You can also use this panel for generating textures. Usage To perform the UV-mapping fill in the form and press the \"Set Minecraft UVs\" button. Texture width - the texture_width property of the Minecraft model. Texture height - the texture_height property of the Minecraft model. Allow texture expanding - whether the texture can be expanded if there is no space for UV-mapping. Generate Texture - whether the operator should generate a texture ( the name of the created texture is always \"template\") Template resolution - Sets the resolution of the template texture. This value describes how many pixels on the image is represented by one texture_widht or texture_height unit in the model definition. The value 1 gives the standard Minecraft texture resolution. Higher values can be used to create \"HD textures\". You can adjust the UV-mapping using UV-groups to get best. Note After the UV mapping, you can still go to the UV editor and move everything to your liking. This operator tries to arrange the UVs of the selected objects on the texture space using the basic non-per-face Minecraft UV-mapping. If you move the UV in such a way that it cannot be mapped in standard Minecraft UV-mapping way than mcblend will detect that and uses per-face UV mapping. Don't move individual vertices of the faces on the UV unless you know what you're doing. The faces on the UV must remain rectangles, or the UV of the exported model may have unexpected shapes.","title":"UV-mapping"},{"location":"basic_operators/#other-operators","text":"The \"Operators\" panel gives access to operators that modify various properties used by Mcblend.","title":"Other operators"},{"location":"basic_operators/#toggle-mirror-for-uv-mapping","text":"Toggles the mirror property of selected objects. The mirror property affects the process of UV-mapping. Objects with this property are mapped as if they had the Minecraft mirror property. Using this operator doesn't remap the UV. If you want to change the UV of the object, you must also use the operator from the Set bedrock UVs panel to update the UVs.","title":"Toggle mirror for UV mapping"},{"location":"basic_operators/#fix-invalid-cube-uv","text":"Fix invalid cube UV operator - as the name suggests - is used to fix invalid UV-mapping of the cubes. All faces of the cubes in the Minecraft model must be rectangular and have certain rotation. This operator ensures that this conditions are true. It's particularly useful when you get an error message which says that certain object has invalid UV-mapping and is impossible to export. Note This operator affects only the selected objects with Cube mesh type .","title":"Fix invalid cube UV"},{"location":"basic_operators/#set-the-uv-group","text":"Adds selected objects to one of the existing UV-groups .","title":"Set the UV group"},{"location":"basic_operators/#clear-the-uv-group","text":"Removes selected objects from UV-groups.","title":"Clear the UV group"},{"location":"basic_operators/#toggle-export-as-bones","text":"Toggles the export bone property of selected objects. Objects with this property are always exported as bones. Mcblend usually tries to export most meshes as cubes and groups them together with some parent object that becomes a bone. If you want to mark a certain cube as an independent bone, you need to use this operator. Note The best way of using Mcblend is to have one rig for the model and parenting the meshes to bones of that rig. This allows you to take the advantage of features like inverse kinematics and also creates a model in which it's really easy to distinguish which Blender object becomes what in Minecraft model. Bones will be translated into Minecraft bones and meshes into cubes. If you add some empties without children they will become the locators.","title":"Toggle export as bones"},{"location":"basic_operators/#inflate","text":"Inflates the selected object using Minecraft inflate property. Running this operator opens a panel in the bottom left corner of the 3D viewport. You can use this panel to adjust the \"inflate\" value.","title":"Inflate"},{"location":"basic_operators/#round-dimensions","text":"Rounds the dimensions of the object in such way that they become integers in exported Minecraft model.","title":"Round dimensions"},{"location":"basic_operators/#separate-cubes","text":"Separate cubes can detect cubes grouped in a single mesh and separate them into multiple objects. Unlike the Mesh: Separate operator (vanilla blender operator), the Separate cubes from Mcblend is designed for working with cuboids and can detect their rotations. This is important because the cubes (meshes) of the models from Mcblend must be aligned to rotations of the object that contain them. Note If you happen to have a mesh with single cube rotated in edit mode (mesh not aligned to object rotation), you can use this operator to fix the problem. The operator won't create new objects if there is only one cube in the mesh but it will fix the rotation problem. Images below show the difference between applying Separate cubes and Mesh: Separate operators: Before separating cubes: After separating cubes: Separated objects after using default blender Mesh->Separate operator:","title":"Separate cubes"},{"location":"conversion_rules/","text":"Conversion rules There are no directly equivalent objects in blender models to Minecraft models. Mcblend uses a set of rules to decide which parts of the model should be turned into bone, locator or cube. Note The best way to learn what kinds of object are converted to what is trial and error. You can use the set of rules below if you notice something unexpected. An empty or mesh with custom export as bone property always creates a a bone or a bone with cube/polymesh, respectively. A Blender bone is converted into a Minecraft bone unless it has no children and no parents. In this case it isn't converted at all. This behavior is to prevent the exporting of inverse kinematics bones. An empty becomes a bone unless it has a parent but no children. In this case it creates a locator. Mesh without parent becomes a bone with a cube/polymesh inside. Mesh with a parent becomes a cube/polymesh. Note The mesh type property decides whether the mesh should be exported as cube or polymesh. The conversion rules can also be represented with this table: Export as bone no parent, no children parent, no children no parent,children parent and children Bone N/A NONE bone bone bone Empty bone bone locator bone bone Mesh bone & cube/polymesh bone & cube/polymesh cube/polymesh bone & cube/polymesh cube/polymesh","title":"Conversion rules"},{"location":"conversion_rules/#conversion-rules","text":"There are no directly equivalent objects in blender models to Minecraft models. Mcblend uses a set of rules to decide which parts of the model should be turned into bone, locator or cube. Note The best way to learn what kinds of object are converted to what is trial and error. You can use the set of rules below if you notice something unexpected. An empty or mesh with custom export as bone property always creates a a bone or a bone with cube/polymesh, respectively. A Blender bone is converted into a Minecraft bone unless it has no children and no parents. In this case it isn't converted at all. This behavior is to prevent the exporting of inverse kinematics bones. An empty becomes a bone unless it has a parent but no children. In this case it creates a locator. Mesh without parent becomes a bone with a cube/polymesh inside. Mesh with a parent becomes a cube/polymesh. Note The mesh type property decides whether the mesh should be exported as cube or polymesh. The conversion rules can also be represented with this table: Export as bone no parent, no children parent, no children no parent,children parent and children Bone N/A NONE bone bone bone Empty bone bone locator bone bone Mesh bone & cube/polymesh bone & cube/polymesh cube/polymesh bone & cube/polymesh cube/polymesh","title":"Conversion rules"},{"location":"gui_changes/","text":"GUI Changes Mcblend adds new panels to Blender GUI: Mcblend tab on sidebar , Mcblend UV groups tab in the Scene Properties , Mcblend events tab in the Scene Properties , Mcblend object properties in the Object Properties , Mcblend: Export model and Mcblend: Export animation in the export menu, Mcblend: Import model in the import menu. Sidebar The sidebar gives access to most of the Mcblend functionality. It contains 5 panels: Export bedrock animation , Export bedrock model , Set bedrock UVs , Operators , Import bedrock model . Scene properties Scene properties tab has two new panels: Mcblend UV groups - used for creating and customizing UV-groups. Mcblend events - used for adding events for creating sound- and particle-effects animations . Object properties Object properties tab has new panel - Mcblend object properties . It lets you view and edit custom object properties used by Mcblend operators . Export as bone - whether the object should be always exported as independent bone or it can be exported as cube/polymesh and grouped with other objects. Mesh type (dropdown list) - Cube or Poly mesh . Decides if the object should be exported as a cube or polymesh. Objects with non-cuboid shapes must be polymesh type or you won't be able to export them. Note Polymesh models are still experimental Minecraft feature and they could even be removed from Minecraft. Experimental features are not allowed on marketplace map so keep that in mind if you're making a map for marketplace. UV Group (textfield) - displays the UV-group name of the selected object. Mirror - the mirror property is used only during the UV-mapping . It affects how to map the faces of the object in a same way as Minecraft mirror property of a cube. Inflate - stores the Minecraft inflate property value of the cube. Note Editing the Inflate value through this panel does not change the dimensions of the object, but it does change the inflate value in the exported object. If you want to inflate/deflate the object you should use the inflate operator from the sidebar.","title":"GUI changes"},{"location":"gui_changes/#gui-changes","text":"Mcblend adds new panels to Blender GUI: Mcblend tab on sidebar , Mcblend UV groups tab in the Scene Properties , Mcblend events tab in the Scene Properties , Mcblend object properties in the Object Properties , Mcblend: Export model and Mcblend: Export animation in the export menu, Mcblend: Import model in the import menu.","title":"GUI Changes"},{"location":"gui_changes/#sidebar","text":"The sidebar gives access to most of the Mcblend functionality. It contains 5 panels: Export bedrock animation , Export bedrock model , Set bedrock UVs , Operators , Import bedrock model .","title":"Sidebar"},{"location":"gui_changes/#scene-properties","text":"Scene properties tab has two new panels: Mcblend UV groups - used for creating and customizing UV-groups. Mcblend events - used for adding events for creating sound- and particle-effects animations .","title":"Scene properties"},{"location":"gui_changes/#object-properties","text":"Object properties tab has new panel - Mcblend object properties . It lets you view and edit custom object properties used by Mcblend operators . Export as bone - whether the object should be always exported as independent bone or it can be exported as cube/polymesh and grouped with other objects. Mesh type (dropdown list) - Cube or Poly mesh . Decides if the object should be exported as a cube or polymesh. Objects with non-cuboid shapes must be polymesh type or you won't be able to export them. Note Polymesh models are still experimental Minecraft feature and they could even be removed from Minecraft. Experimental features are not allowed on marketplace map so keep that in mind if you're making a map for marketplace. UV Group (textfield) - displays the UV-group name of the selected object. Mirror - the mirror property is used only during the UV-mapping . It affects how to map the faces of the object in a same way as Minecraft mirror property of a cube. Inflate - stores the Minecraft inflate property value of the cube. Note Editing the Inflate value through this panel does not change the dimensions of the object, but it does change the inflate value in the exported object. If you want to inflate/deflate the object you should use the inflate operator from the sidebar.","title":"Object properties"},{"location":"limitations/","text":"Limitations Every cube must be a separate Blender object If you are creating a traditional Minecraft model with all parts made out of cubes you mast make sure that every cube is an separate object (separate mesh). You can use the edit mode to rotate, scale and move your cubes to your preference however, they mast be separated before you export the model (see separate cubes operator ) If you don't want to be restricted to using only cuboids for your model you can also mark your objects as polymesh . No wide angles in animations There must be no more than 180\u00b0 rotation between two key frames. This issue is caused by the way Mcblend computes Minecraft's rotations internally. Blender supports multiple rotation modes and uses different rotation types for different kinds of objects. For example, bone rotations in armatures use quaternions, but meshes use Euler angles. Additionally, users can choose different rotation modes for each object. Minecraft uses Euler angles, but the axes are set differently. Mcblend can export models and animations regardless of the rotation modes used, but internally everything is converted to quaternions / translation matrices. The design decision for the internal use of quaternions was motivated by the fact that quaternions help avoid some calculation errors. Unfortunately, the quaternion number system has only one unique representation for each rotation orientation, so one cannot distinguish full rotation from no rotation (360\u00b0 == 0\u00b0). Therefore, you cannot use angles greater than 180\u00b0 between two key frames because Mcblend will always try to export as short rotation as possible. Note A quick fix to this problem is adding additional key frames for wide angle rotations. No dots in names names The add-on does not allow the use of names that have periods. Anything after the first dot in the object name is ignored during the conversion. You can use dots in the names of the objects that aren't converted to bones of exported Minecraft model. The conversion rules are described in the conversion rules section of the user manual.","title":"Limitations"},{"location":"limitations/#limitations","text":"","title":"Limitations"},{"location":"limitations/#every-cube-must-be-a-separate-blender-object","text":"If you are creating a traditional Minecraft model with all parts made out of cubes you mast make sure that every cube is an separate object (separate mesh). You can use the edit mode to rotate, scale and move your cubes to your preference however, they mast be separated before you export the model (see separate cubes operator ) If you don't want to be restricted to using only cuboids for your model you can also mark your objects as polymesh .","title":"Every cube must be a separate Blender object"},{"location":"limitations/#no-wide-angles-in-animations","text":"There must be no more than 180\u00b0 rotation between two key frames. This issue is caused by the way Mcblend computes Minecraft's rotations internally. Blender supports multiple rotation modes and uses different rotation types for different kinds of objects. For example, bone rotations in armatures use quaternions, but meshes use Euler angles. Additionally, users can choose different rotation modes for each object. Minecraft uses Euler angles, but the axes are set differently. Mcblend can export models and animations regardless of the rotation modes used, but internally everything is converted to quaternions / translation matrices. The design decision for the internal use of quaternions was motivated by the fact that quaternions help avoid some calculation errors. Unfortunately, the quaternion number system has only one unique representation for each rotation orientation, so one cannot distinguish full rotation from no rotation (360\u00b0 == 0\u00b0). Therefore, you cannot use angles greater than 180\u00b0 between two key frames because Mcblend will always try to export as short rotation as possible. Note A quick fix to this problem is adding additional key frames for wide angle rotations.","title":"No wide angles in animations"},{"location":"limitations/#no-dots-in-names-names","text":"The add-on does not allow the use of names that have periods. Anything after the first dot in the object name is ignored during the conversion. You can use dots in the names of the objects that aren't converted to bones of exported Minecraft model. The conversion rules are described in the conversion rules section of the user manual.","title":"No dots in names names"},{"location":"texture_customization/","text":"Texture generator customization You can customize the appearance of a UV-group by applying masks to its faces in new custom panel in Scene Properties . Masks are filters that are applied to the texture when it is generated. Each UV-group has 6 faces. You can switch between faces to edit with \"Side:\" dropdown menu. The image below shows how the names of the sides (side1-6) are correlated to their placement on the texture. New masks are added with \"Add mask\" dropdown menu. There are 8 different types of masks. Note All masks have an eye icon in the upper right corner that can be used to temporarily disable / enable the mask. Color Palette Mask This mask takes the grayscale image as an input and maps its brightness values to a color image with a palette defined as a list of colors. Properties: Colors - list of colors in the palette Interpolate - whether there should be a smooth transition between the colors on the palette. Normalize - normalizes the input values so that the whole color palette is used. Note When input image is not grayscale than it gets converted to grayscale before applying the mask. Note Color palette mask is the only mask which can't be used inside the Mix Mask. If you put this mask into mix mask it will have no effect. Gradient Mask The Gradient mask creates a grayscale gradient with stripes of varying darkness and width. The direction in which the stripes are drawn is defined with two points on the texture. The grayscale image is than multiplied by the input image. Properties: Point A - the starting point of drawing gradient stripes. Point B - the end point of drawing gradient stripes. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Stripes - the list of stripes in the gradient their colors (strengths) and their widths. The widths define their placement on a line between points A and B so in most cases the width of the first stripe is 0, which means that this stripe should be drawn at the Point A. Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Ellipse Mask Ellipse mask creates a grayscale image of ellipse that fits between Point A and Point B. The grayscale image is than multiplied by the input image. Properties: Point A and B - boundaries of the ellipse. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of brightness of created filter image. Hard edge - whether the ellipse should have hard edges or the brightness of the inner part of the ellipse should be smoothly interpolated to the edges of the image. Rectangle Mask Rectangle mask creates a grayscale image of rectangle between Point A and Point B. The grayscale image is than multiplied by the input image. Properties: Point A and B - opposite corners of the rectangle. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of brightness of created filter image. Hard edge - whether the rectangle should have hard edges or the brightness of the inner part of the rectangle should be smoothly interpolated to the edges of the image. Stripes Mask Rectangle mask creates a grayscale image with repeating stripes of certain width and brightness. The grayscale image is than multiplied by the input image. Properties: Relative boundaries - whether the width of the stripes is expressed as a fraction of the image width / height. Stripes - the list of the stripes, their width and their brightness. Horizontal - whether the stripes should be vertical or horizontal. Random Mask Random mask creates a grayscale image with randomly bright pixels. The grayscale image is than multiplied by the input image. Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max brightness values of the pixels on the filter image. Use seed - allows you to set the seed for the color randomization. Color Mask Color mask multiplies the input mask by a color. Mix Mask Mix mask lets you mix multiple masks in different way than just default multiplication. Properties: Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of the brightness of returned filter image. The filter image brightness values are mapped to fit on the scale between values defined with \"strength\" Mix mode - how to mix filter images produced by other masks. There are 4 options: min, max, mean and median. Number of children - Number of mixed masks. Note Mix mask ignores the color palette masks because color palette mask does not create a filter image (it just alters the image from the input).","title":"Texture customization (advanced)"},{"location":"texture_customization/#texture-generator-customization","text":"You can customize the appearance of a UV-group by applying masks to its faces in new custom panel in Scene Properties . Masks are filters that are applied to the texture when it is generated. Each UV-group has 6 faces. You can switch between faces to edit with \"Side:\" dropdown menu. The image below shows how the names of the sides (side1-6) are correlated to their placement on the texture. New masks are added with \"Add mask\" dropdown menu. There are 8 different types of masks. Note All masks have an eye icon in the upper right corner that can be used to temporarily disable / enable the mask.","title":"Texture generator customization"},{"location":"texture_customization/#color-palette-mask","text":"This mask takes the grayscale image as an input and maps its brightness values to a color image with a palette defined as a list of colors. Properties: Colors - list of colors in the palette Interpolate - whether there should be a smooth transition between the colors on the palette. Normalize - normalizes the input values so that the whole color palette is used. Note When input image is not grayscale than it gets converted to grayscale before applying the mask. Note Color palette mask is the only mask which can't be used inside the Mix Mask. If you put this mask into mix mask it will have no effect.","title":"Color Palette Mask"},{"location":"texture_customization/#gradient-mask","text":"The Gradient mask creates a grayscale gradient with stripes of varying darkness and width. The direction in which the stripes are drawn is defined with two points on the texture. The grayscale image is than multiplied by the input image. Properties: Point A - the starting point of drawing gradient stripes. Point B - the end point of drawing gradient stripes. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Stripes - the list of stripes in the gradient their colors (strengths) and their widths. The widths define their placement on a line between points A and B so in most cases the width of the first stripe is 0, which means that this stripe should be drawn at the Point A. Exponent - the filter image is raised to the power of this value before it is multiplied by the image.","title":"Gradient Mask"},{"location":"texture_customization/#ellipse-mask","text":"Ellipse mask creates a grayscale image of ellipse that fits between Point A and Point B. The grayscale image is than multiplied by the input image. Properties: Point A and B - boundaries of the ellipse. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of brightness of created filter image. Hard edge - whether the ellipse should have hard edges or the brightness of the inner part of the ellipse should be smoothly interpolated to the edges of the image.","title":"Ellipse Mask"},{"location":"texture_customization/#rectangle-mask","text":"Rectangle mask creates a grayscale image of rectangle between Point A and Point B. The grayscale image is than multiplied by the input image. Properties: Point A and B - opposite corners of the rectangle. Relative boundaries - whether points A and B should be passed as absolute values (number of pixels from the lower left corner of the texture) or as a fraction of the texture size (0.0 lower left corner, 1.0 upper right corner). The absolute values can be negative, meaning they represent the number of pixels from the top right corner (starting at -1). Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of brightness of created filter image. Hard edge - whether the rectangle should have hard edges or the brightness of the inner part of the rectangle should be smoothly interpolated to the edges of the image.","title":"Rectangle Mask"},{"location":"texture_customization/#stripes-mask","text":"Rectangle mask creates a grayscale image with repeating stripes of certain width and brightness. The grayscale image is than multiplied by the input image. Properties: Relative boundaries - whether the width of the stripes is expressed as a fraction of the image width / height. Stripes - the list of the stripes, their width and their brightness. Horizontal - whether the stripes should be vertical or horizontal.","title":"Stripes Mask"},{"location":"texture_customization/#random-mask","text":"Random mask creates a grayscale image with randomly bright pixels. The grayscale image is than multiplied by the input image. Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max brightness values of the pixels on the filter image. Use seed - allows you to set the seed for the color randomization.","title":"Random Mask"},{"location":"texture_customization/#color-mask","text":"Color mask multiplies the input mask by a color.","title":"Color Mask"},{"location":"texture_customization/#mix-mask","text":"Mix mask lets you mix multiple masks in different way than just default multiplication. Properties: Exponent - the filter image is raised to the power of this value before it is multiplied by the image. Strength - the min and max values of the brightness of returned filter image. The filter image brightness values are mapped to fit on the scale between values defined with \"strength\" Mix mode - how to mix filter images produced by other masks. There are 4 options: min, max, mean and median. Number of children - Number of mixed masks. Note Mix mask ignores the color palette masks because color palette mask does not create a filter image (it just alters the image from the input).","title":"Mix Mask"},{"location":"tips_and_tricks/","text":"Tips and tricks This is a list of tips and tricks related to Mcbled. Some of them are related to the addon and some of them explain some basics of using Blender which can be useful for working with Mcblend. Matching framerate By default blender uses 24FPS framerate. Minecraft uses seconds to define the timestamps of keyframes in animation. It's good to change the framerate setting into something that divides 1 second period into something nice - for example (25FPS or 20FPS). 1/24 is 0.0416666 but 1/25 is 0.04 which looks way better in the animation file. You can find the framerate setting in Output Properties -> Frame Rate . World unit scale By default 1 meter in your model is equal to one block in Minecraft. One meter in Minecraft model is 16 pixels on the texture of the model. You might want to measure the size in pixels instead of meters. You can change the setting that you can find under Scene properties -> Unit scale . Changing the value of this property to 16 will cause that one meter of your Blender model will be converted into 1 pixel in Minecraft. Creating materials Currently the addon doesn't create materials for your model during UV mapping and generating textures. When you create your UV map and texture template, it is not visible on your model. If you want to make the texture visible you have to create new material in shader editor and assign it to every object in your model. Generate texture template using the Set bedrock UV panel . Go to the shading tab and create new material. Based on the image below: Enable the transparency in material properties. Assign the material to other objects in your model. Select all of your objects and make sure that the object that uses your material is active. Go to Material Properties right click on the material and select \"Copy to selected\".","title":"Tips and tricks"},{"location":"tips_and_tricks/#tips-and-tricks","text":"This is a list of tips and tricks related to Mcbled. Some of them are related to the addon and some of them explain some basics of using Blender which can be useful for working with Mcblend.","title":"Tips and tricks"},{"location":"tips_and_tricks/#matching-framerate","text":"By default blender uses 24FPS framerate. Minecraft uses seconds to define the timestamps of keyframes in animation. It's good to change the framerate setting into something that divides 1 second period into something nice - for example (25FPS or 20FPS). 1/24 is 0.0416666 but 1/25 is 0.04 which looks way better in the animation file. You can find the framerate setting in Output Properties -> Frame Rate .","title":"Matching framerate"},{"location":"tips_and_tricks/#world-unit-scale","text":"By default 1 meter in your model is equal to one block in Minecraft. One meter in Minecraft model is 16 pixels on the texture of the model. You might want to measure the size in pixels instead of meters. You can change the setting that you can find under Scene properties -> Unit scale . Changing the value of this property to 16 will cause that one meter of your Blender model will be converted into 1 pixel in Minecraft.","title":"World unit scale"},{"location":"tips_and_tricks/#creating-materials","text":"Currently the addon doesn't create materials for your model during UV mapping and generating textures. When you create your UV map and texture template, it is not visible on your model. If you want to make the texture visible you have to create new material in shader editor and assign it to every object in your model. Generate texture template using the Set bedrock UV panel . Go to the shading tab and create new material. Based on the image below: Enable the transparency in material properties. Assign the material to other objects in your model. Select all of your objects and make sure that the object that uses your material is active. Go to Material Properties right click on the material and select \"Copy to selected\".","title":"Creating materials"},{"location":"uv_groups/","text":"UV-groups UV-groups influence the process of UV-mapping. The main purpose of UV-groups is to group cubes together so that they are mapped to the same spot on the texture. Using UV groups can help reduce the texture size when the model has many identical parts. UV-groups also let you can change the appearance of generated textures to your preference. This can be useful for setting some distinguishable look for UV-group members. You can create some fairly advanced textures with it, but it's usually better to create textures in a usual way. Creating and removing UV-groups UV-groups are added / removed using the \"Mcblend UV groups\" panel from the Scene Properties with \"New UV group\" and \"Delete this UV group\" buttons. You can also export and import UV groups by using the \"Export UV group\" and \"Import UV group\" buttons respectively. Adding objects to UV-groups Adding object do UV-groups is done with Set the UV group button on sidebar. You must create at least one UV-group in order to add objects to it.","title":"UV-groups"},{"location":"uv_groups/#uv-groups","text":"UV-groups influence the process of UV-mapping. The main purpose of UV-groups is to group cubes together so that they are mapped to the same spot on the texture. Using UV groups can help reduce the texture size when the model has many identical parts. UV-groups also let you can change the appearance of generated textures to your preference. This can be useful for setting some distinguishable look for UV-group members. You can create some fairly advanced textures with it, but it's usually better to create textures in a usual way.","title":"UV-groups"},{"location":"uv_groups/#creating-and-removing-uv-groups","text":"UV-groups are added / removed using the \"Mcblend UV groups\" panel from the Scene Properties with \"New UV group\" and \"Delete this UV group\" buttons. You can also export and import UV groups by using the \"Export UV group\" and \"Import UV group\" buttons respectively.","title":"Creating and removing UV-groups"},{"location":"uv_groups/#adding-objects-to-uv-groups","text":"Adding object do UV-groups is done with Set the UV group button on sidebar. You must create at least one UV-group in order to add objects to it.","title":"Adding objects to UV-groups"}]}